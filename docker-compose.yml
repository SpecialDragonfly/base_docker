version: '3'
services:

  #PHP Service
  base-app:
    build:
      context: .
      dockerfile: Dockerfile
    image: base-app:latest   
    container_name: base-app
    tty: true
    environment:
      SERVICE_NAME: base-app
      SERVICE_TAGS: dev
    working_dir: /var/www
    volumes:
       - ./:/var/www
    networks:
      - app-network
    depends_on:
      - base-db

  #Nginx Service
  base-webserver:
    image: nginx:alpine
    container_name: base-webserver
    restart: unless-stopped
    tty: true
    ports:
      - "88:80"
    volumes:
      - ./:/var/www
      - ./docker/nginx/conf.d/:/etc/nginx/conf.d/
    networks:
      - app-network

  #MySQL Service
  base-db:
    image: mysql:5.7
    container_name: base-db
    restart: unless-stopped
    tty: true
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: tech-test
      MYSQL_ROOT_PASSWORD: root
      MYSQL_USER: root
      MYSQL_PASSWORD: root
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - dbdata:/var/lib/mysql 
    networks:
      - app-network

  base-create-db:
    image: base-app:latest
    container_name: base-create-db
    command: ["./docker/wait-for-it/wait-for-it.sh", "base-db:3306", "--timeout=60", "--", "composer", "run", "create-database"]
    networks:
      - app-network
    depends_on:
      - base-db

  base-migration:
    image: base-app:latest
    container_name: base-migration
    command: ["./docker/wait-for-it/wait-for-it.sh", "base-db:3306", "--timeout=60", "--", "composer", "run", "refresh-database"]    
    networks:
      - app-network     
    depends_on:
      - base-create-db

#Docker Networks
networks:
  app-network:
    driver: bridge
#Volumes
volumes:
  dbdata:
    driver: local    
